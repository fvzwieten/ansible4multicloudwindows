---
- name: Retrieve admin credentials for Windows
  hosts: localhost
  gather_facts: no
  tasks:
  - name: add instance host with machine credential in inventory
    add_host:
      name: "instance"
      admin_username: "{{ansible_user}}"
      admin_password: "{{ansible_password}}"

- name: gcp_create_vm
  hosts: localhost
  connection: local
  gather_facts: no
  vars_files:
  - files/gcp_vars

  tasks:
  - name: create a public ip
    gcp_compute_address:
      name: address-instance
      region: "{{ gcp_region }}"
      project: "{{ gcp_project }}"
      auth_kind: "{{ gcp_cred_kind }}"
      service_account_file: "{{ gcp_cred_file }}"
      state: present
    register: public_ip
      
  - name: create a VM
    gcp_compute_instance:
      state: present
      status: RUNNING
      name: "{{ vm_name }}"
      machine_type: n1-standard-1
      disks:
      - auto_delete: true
        boot: true
        initialize_params:
          source_image: "projects/windows-cloud/global/images/family/windows-2019"
      network_interfaces:
      - access_configs:
        - name: External NAT
          nat_ip: "{{ public_ip }}"
          type: ONE_TO_ONE_NAT
      zone: "{{ gcp_zone }}"
      project: "{{ gcp_project }}"
      auth_kind: "{{ gcp_cred_kind }}"
      service_account_file: "{{ gcp_cred_file }}"
      scopes:
      - https://www.googleapis.com/auth/compute
      metadata:
        sysprep-specialize-script-ps1: "iex ((New-Object System.Net.WebClient).DownloadString('https://raw.githubusercontent.com/fvzwieten/ansible4gcp/master/scripts/sysprep.ps1'))"
      tags:
        items:
        - "{{ role }}"
    register: instance

  - name: Wait for VM provisioning..
    wait_for:
      host: "{{ public_ip.address }}"
      port: 3389
      delay: 60
      timeout: 600

  - name: Wait for VM to be ready..
    wait_for:
      host: "{{ public_ip.address }}"
      port: 5986
      delay: 60
      timeout: 600

  - name: Retrieve administrator password
    gcp_compute_win_password:
      instance: "{{ vm_name }}"
      zone: "{{ gcp_zone }}"
      project: "{{ gcp_project }}"
      email: "{{ gcp_email }}"
      credential_file: "files/gcp-serviceaccount.json"
      username: '{{ hostvars["instance"].admin_username }}'
    register: win_pwd

  - name: add instance to inventory
    add_host:
      name: '{{ public_ip.address }}'
      groups:
      - just_created
      user: "{{ win_pwd.username }}"
      pwd: "{{ win_pwd.password }}"
      public_ip: "{{ public_ip.address }}"

- name: add ansible machine credential to instance
  hosts: just_created
  gather_facts: no
  vars_files:
  - files/winrm_vars
  vars:
    ansible_user: "{{ user }}"
    ansible_password: "{{ pwd }}"
      
  tasks:
  - name: make sure the instance is ready
    wait_for_connection:

  - name: add windows admin account for ansible
    win_user:
      name: '{{ hostvars["instance"].admin_username }}'
      password: '{{ hostvars["instance"].admin_password }}'
      state: present
      groups:
      - Administrators

  # Use a debug statement to report on stuff in the logging
  - name: Report endpoints
    debug:
      msg: "VM name: {{ vm_name }} Role: {{ role }} Public IP: {{ public_ip }}"
